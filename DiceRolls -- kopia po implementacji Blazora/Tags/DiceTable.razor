@*<h3>DiceTable: @SessionId</h3>
<p>@diceString</p>*@
<table>
    @if (diceString != null && diceString != string.Empty)
    {
        var lines = (diceString).Split('|');

        for (int i = lines.Length - 1; i >= 0; i--)
        {
            <tr>
                <td class="first"><i><b>@lines[i].Split('^')[3]</b> @lines[i].Split('^')[2]</i></td>
                <td><b><span>k</span>@lines[i].Split('^')[0]</b></td>
                @foreach (string result in lines[i].Split('^')[1].Split(','))
                {
                    <td>@result</td>
                }
            </tr>
        }
    }
</table>

@code {
        [Parameter]
        public int SessionId { get; set; }

        [Parameter]
        public EventCallback<int> SessionIdChanged { get; set; }

        [Parameter]
        public bool AutoRefresh { get; set; }

        [Parameter]
        public EventCallback<bool> AutoRefreshChanged { get; set; }

    private string diceString = string.Empty;
    private bool firstRender = true;

    protected override void OnInitialized()
    {
        RefreshAsync();
    }

    private async Task RefreshAsync()
    {
        while (true)
        {
            if (AutoRefresh || firstRender)
            {
                if (firstRender)
                    firstRender = false;
                diceString = await LiteDBOper.GetUserByIdAsync(SessionId);
                StateHasChanged();
            }

            await Task.Delay(3000);
        }
    }
}
